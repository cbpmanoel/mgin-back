version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: kiosk-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
    volumes:
      - mongodb_data:/data/db
      - ./resources/database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./resources/database/init-data.json:/data/init-data.json:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Mongo-Express Service
  mongo-express:
    image: mongo-express:latest
    container_name: kiosk-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      mongodb:
        condition: service_healthy

  # FastAPI Application Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kiosk-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - LOG_LEVEL=${LOG_LEVEL}
      - UVICORN_LOG_LEVEL=${UVICORN_LOG_LEVEL}
      - UVICORN_RELOAD=${UVICORN_RELOAD}
    depends_on:
      mongodb:
        condition: service_healthy

volumes:
  mongodb_data:
